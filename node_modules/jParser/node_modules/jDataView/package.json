{
  "name": "jDataView",
  "version": "2.3.0",
  "description": "A unique way to work with a binary file in the browser and the server.",
  "keywords": [
    "buffer",
    "binary",
    "data",
    "file",
    "dataview",
    "read",
    "write",
    "manipulation"
  ],
  "homepage": "http://jDataView.github.io/",
  "author": {
    "name": "Vjeux",
    "email": "vjeuxx@gmail.com",
    "url": "http://blog.vjeux.com/"
  },
  "contributors": [
    {
      "name": "Vjeux",
      "email": "vjeuxx@gmail.com",
      "url": "http://blog.vjeux.com/"
    },
    {
      "name": "RReverser",
      "email": "me@rreverser.com",
      "url": "http://rreverser.com"
    }
  ],
  "files": [
    "src/jDataView.js"
  ],
  "main": "src/jDataView.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/jDataView/jDataView.git"
  },
  "dependencies": {
    "jdataview": "*"
  },
  "readme": "[![Build Status](https://travis-ci.org/jDataView/jDataView.png?branch=master)](https://travis-ci.org/jDataView/jDataView) <a href=\"http://blog.vjeux.com/2011/javascript/jdataview-read-binary-file.html\">jDataView</a> - A unique way to work with a binary file in JavaScript.\r\n================================\r\n\r\njDataView provides a standard way to read and/or modify binary files in all the browsers. It follows the [DataView Specification](http://www.khronos.org/registry/webgl/doc/spec/TypedArray-spec.html#6) and even extends it for a more practical use.\r\n\r\nCaution\r\n=========\r\n\r\nAccording to new npm naming restrictions, jDataView was renamed to jdataview in registry and this package is left only for backward compatibility.\r\n\r\nRefer to [new package](https://npmjs.org/package/jdataview) for up-to-date version of code and documentation.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jDataView/jDataView/issues"
  },
  "_id": "jDataView@2.3.0",
  "_from": "jDataView@*"
}
